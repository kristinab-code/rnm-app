{"ast":null,"code":"var _jsxFileName = \"/Users/kris/Documents/projects/js/my-app/src/Locations.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Tippy from '@tippy.js/react';\nimport 'tippy.js/dist/tippy.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Locations = () => {\n  _s();\n  const [locations, setLocations] = useState([]);\n  useEffect(() => {\n    fetch('https://rickandmortyapi.com/api/location').then(response => response.json()).then(data => setLocations(data.results));\n  }, []);\n  const maxInhabitants = Math.max(...locations.map(location => location.residents.length));\n  console.log(locations.length);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: \"100%\",\n    height: \"100vh\",\n    children: locations.forEach((location, index) => {\n      const rectWidthPercentage = location.residents.length / maxInhabitants * 100; // Width as a percentage of max inhabitants\n      const rectHeightPercentage = 100 / locations.length; // Height as a percentage of SVG height\n      return /*#__PURE__*/_jsxDEV(\"g\", {\n        children: [/*#__PURE__*/_jsxDEV(Tippy, {\n          content: `${location.name}: ${location.residents.length} inhabitants`,\n          children: /*#__PURE__*/_jsxDEV(\"rect\", {\n            x: 0,\n            y: `${index * rectHeightPercentage}%` // Using percentage for y coordinate\n            ,\n            width: `${rectWidthPercentage}%` // Using percentage for width\n            ,\n            height: `${rectHeightPercentage}%` // Using percentage for height\n            ,\n            fill: \"lightblue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: 0.5 // Small padding from the left\n          ,\n          y: `${index * rectHeightPercentage + rectHeightPercentage * 0.5}%` // Positioning text inside the rectangle using percentages\n          ,\n          children: location.residents.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(Locations, \"MB6FmaD0YN2j72DuSocJeRR7/38=\");\n_c = Locations;\nexport default Locations;\nvar _c;\n$RefreshReg$(_c, \"Locations\");","map":{"version":3,"names":["React","useEffect","useState","Tippy","jsxDEV","_jsxDEV","Locations","_s","locations","setLocations","fetch","then","response","json","data","results","maxInhabitants","Math","max","map","location","residents","length","console","log","width","height","children","forEach","index","rectWidthPercentage","rectHeightPercentage","content","name","x","y","fill","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kris/Documents/projects/js/my-app/src/Locations.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Tippy from '@tippy.js/react';\nimport 'tippy.js/dist/tippy.css';\n\nconst Locations = () => {\n  const [locations, setLocations] = useState([]);\n\n  useEffect(() => {\n    fetch('https://rickandmortyapi.com/api/location')\n      .then(response => response.json())\n      .then(data => setLocations(data.results));\n  }, []);\n\n  const maxInhabitants = Math.max(...locations.map(location => location.residents.length));\n\n\tconsole.log(locations.length);\n\n  return (\n    <svg width=\"100%\" height=\"100vh\">\n      {locations.forEach((location, index) => {\n        const rectWidthPercentage = (location.residents.length / maxInhabitants) * 100;  // Width as a percentage of max inhabitants\n        const rectHeightPercentage = 100 / locations.length;  // Height as a percentage of SVG height\n        return (\n          <g key={index}>\n            <Tippy content={`${location.name}: ${location.residents.length} inhabitants`}>\n              <rect\n                x={0}\n                y={`${index * rectHeightPercentage}%`}  // Using percentage for y coordinate\n                width={`${rectWidthPercentage}%`}  // Using percentage for width\n                height={`${rectHeightPercentage}%`}  // Using percentage for height\n                fill=\"lightblue\"\n              />\n            </Tippy>\n            {/* Adding the text element to display the number of inhabitants */}\n            <text\n              x={0.5}  // Small padding from the left\n              y={`${(index * rectHeightPercentage) + rectHeightPercentage * 0.5}%`}  // Positioning text inside the rectangle using percentages\n\n            >\n              {location.residents.length}\n            </text>\n          </g>\n        );\n      })}\n    </svg>\n  );\n};\n\nexport default Locations;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,iBAAiB;AACnC,OAAO,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACdS,KAAK,CAAC,0CAA0C,CAAC,CAC9CC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIL,YAAY,CAACK,IAAI,CAACC,OAAO,CAAC,CAAC;EAC7C,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,cAAc,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAGV,SAAS,CAACW,GAAG,CAACC,QAAQ,IAAIA,QAAQ,CAACC,SAAS,CAACC,MAAM,CAAC,CAAC;EAEzFC,OAAO,CAACC,GAAG,CAAChB,SAAS,CAACc,MAAM,CAAC;EAE5B,oBACEjB,OAAA;IAAKoB,KAAK,EAAC,MAAM;IAACC,MAAM,EAAC,OAAO;IAAAC,QAAA,EAC7BnB,SAAS,CAACoB,OAAO,CAAC,CAACR,QAAQ,EAAES,KAAK,KAAK;MACtC,MAAMC,mBAAmB,GAAIV,QAAQ,CAACC,SAAS,CAACC,MAAM,GAAGN,cAAc,GAAI,GAAG,CAAC,CAAE;MACjF,MAAMe,oBAAoB,GAAG,GAAG,GAAGvB,SAAS,CAACc,MAAM,CAAC,CAAE;MACtD,oBACEjB,OAAA;QAAAsB,QAAA,gBACEtB,OAAA,CAACF,KAAK;UAAC6B,OAAO,EAAG,GAAEZ,QAAQ,CAACa,IAAK,KAAIb,QAAQ,CAACC,SAAS,CAACC,MAAO,cAAc;UAAAK,QAAA,eAC3EtB,OAAA;YACE6B,CAAC,EAAE,CAAE;YACLC,CAAC,EAAG,GAAEN,KAAK,GAAGE,oBAAqB,GAAG,CAAE;YAAA;YACxCN,KAAK,EAAG,GAAEK,mBAAoB,GAAG,CAAE;YAAA;YACnCJ,MAAM,EAAG,GAAEK,oBAAqB,GAAG,CAAE;YAAA;YACrCK,IAAI,EAAC;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC,eAERnC,OAAA;UACE6B,CAAC,EAAE,GAAI,CAAE;UAAA;UACTC,CAAC,EAAG,GAAGN,KAAK,GAAGE,oBAAoB,GAAIA,oBAAoB,GAAG,GAAI,GAAG,CAAE;UAAA;UAAAJ,QAAA,EAGtEP,QAAQ,CAACC,SAAS,CAACC;QAAM;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtB,CAAC;MAAA,GAjBDX,KAAK;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAkBV,CAAC;IAER,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACjC,EAAA,CA1CID,SAAS;AAAAmC,EAAA,GAATnC,SAAS;AA4Cf,eAAeA,SAAS;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}